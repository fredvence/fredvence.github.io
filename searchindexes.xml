<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>Android HIDL 服务实现</title><url>/posts/android-hidl.html</url><categories><category>android 技术</category></categories><tags><tag>android</tag><tag>HIDL</tag></tags><content type="html"> 概述 引用Android 官方文档描述：
HAL 接口定义语言（简称 HIDL）是用于指定 HAL 和其用户之间的接口的一种接口描述语言 (IDL)。HIDL 允许指定类型和方法调用（会汇集到接口和软件包中）。从更广泛的意义上来说，HIDL 是指用于在可以独立编译的代码库之间进行通信的系统。从 Android 10 开始，HIDL 已废弃，Android 将在所有位置改用 AIDL 。
HIDL 旨在用于进程间通信 (IPC)。使用 HDL 创建的 HAL 称为绑定式 HAL，因为它们可以使用 Binder 进程间通信 (IPC) 调用与其他架构层进行通信。绑定式 HAL 在独立于使用它们的客户端的进程中运行。对于必须与进程相关联的代码库，还可以使用 透传模式 （在 Java 中不受支持）。
HIDL 可指定数据结构和方法签名，这些内容会整理归类到接口（与类相似）中，而接口会汇集到软件包中。尽管 HIDL 具有一系列不同的关键字，但 C++ 和 Java 程序员对 HIDL 的语法并不陌生。此外，HIDL 还使用 Java 样式的注解
HIDL 服务端实现（C++） 创建HAL 接口 创建目录，创建HAL 接口问题：
mkdir vendor/czx/hardware/interfaces/hello/1.0/default touch vendor/czx/hardware/interfaces/hello/1.0/IHello.hal 在IHello.hal 中进行接口的声明：
package vendor.czx.hardware.hello@1.0; interface IHello { hello(string name) generates (string result); foo(int32_t a, int32_t b) generates (int32_t result); print(string s); }; 详细HAL 语法
数据类型 | Android 开源项目 | Android Open Source Project 建立HIDL根目录映射关系 在vendor/czx/hardware/interfaces/hello/1.0目录下创建一个Android.bp文件.
subdirs = [ &amp;amp;#34;*&amp;amp;#34;, ] …</content></entry><entry><title>SSH 免密登录远程机器</title><url>/posts/ssh-login.html</url><categories><category>软件管理</category></categories><tags><tag>ssh</tag><tag>免密</tag></tags><content type="html"> 本地机器如何实现SSH免密登录远程机器
本地机器生成ssh 密钥 #输入命令，然后一直回车. 密钥保存在用户根目录的.ssh目录下，例如/home/chenzx/.ssh/ ssh-keygen -t rsa ssh 公钥copy到远程机器 ssh-copy-id -i ~/.ssh/id_rsa.pub -p 22 xxxx(登录账号名)@xxx.xxx.xxx.xxx(远程服务器地址) 验证 #如果能直接登录说明配置成功 ssh xxxx(登录账号名)@)@xxx.xxx.xxx.xxx</content></entry><entry><title>HomeBrew 国内安装和常用命令</title><url>/posts/brew-install.html</url><categories><category>软件管理</category></categories><tags><tag>brew</tag></tags><content type="html"><![CDATA[   Homebrew 是一款 Mac OS （Linux/WSL下也能使用）平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。
首先在命令行运行如下几条命令设置环境变量：
# Set PATH, MANPATH, etc., for Homebrew. export HOMEBREW_BREW_GIT_REMOTE=&#34;https://mirrors.ustc.edu.cn/brew.git&#34; export HOMEBREW_CORE_GIT_REMOTE=&#34;https://mirrors.ustc.edu.cn/homebrew-core.git&#34; export HOMEBREW_BOTTLE_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles&#34; export HOMEBREW_API_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles/api&#34; 国内安装 HomeBrew 一键安装：
/bin/bash -c &#34;$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/install.sh)&#34; 一键卸载：
/bin/bash -c &#34;$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/uninstall.sh)&#34; 设置HomeBrew环境变量：
echo &#39;eval &#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&#34;&#39; &gt;&gt; $HOME/.bashrc source .bashrc 更新API接口和预编译接口镜像：
- 如果需要将应用和大型二进制文件渠道改为中科大镜像，请复制以下命令: brew tap --custom-remote --force-auto-update homebrew/cask https://mirrors.ustc.edu.cn/homebrew-cask.git - 注意： brew 4.0 及之后的版本使用新的元数据 JSON API 接口,强烈建议把API接口和预编译接口改为中科大镜像,否则容易更新失败: # 对于 bash 用户 echo &#39;export HOMEBREW_BOTTLE_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles&#34;&#39; &gt;&gt; ~/.bashrc echo &#39;export HOMEBREW_API_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles/api&#34;&#39; &gt;&gt; ~/.bashrc # 对于 zsh 用户 echo &#39;export HOMEBREW_BOTTLE_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles&#34;&#39; &gt;&gt; ~/.zshrc echo &#39;export HOMEBREW_API_DOMAIN=&#34;https://mirrors.ustc.edu.cn/homebrew-bottles/api&#34;&#39; &gt;&gt; ~/.zshrc HomeBrew 常用命令 命令 解释 brew &ndash;version 或者 brew -v 显示 brew 版本信息 brew install &lt;软件名&gt; 安装指定软件 brew uninstall &lt;软件名&gt; 卸载指定软件 brew list 显示所有的已安装的软件 brew search &lt;软件名&gt; 搜索本地远程仓库的软件，已安装会显示绿色的勾 brew search /&lt;软件名&gt;/ 使用正则表达式搜软件( https://formulae.brew.sh/ , 也可以通过网页搜索软件，可以获取更加丰富的信息) brew update 自动升级 homebrew brew outdated 检测已经过时的软件 brew upgrade 升级所有已过时的软件，即列出的以过时软件 brew upgrade &lt;软件名&gt; 升级指定的软件 brew pin &lt;软件名&gt; 禁止指定软件升级 brew unpin &lt;软件名&gt; 解锁禁止升级 brew upgrade &ndash;all 升级所有的软件包，包括未清理干净的旧版本的包 brew cleanup -n 列出需要清理的内容 brew cleanup &lt;软件名&gt; 清理指定的软件过时包 brew cleanup 清理所有的过时软件 brew uninstall &lt;软件名&gt; 卸载指定软件 brew uninstall &lt;软件名&gt; &ndash;force 彻底卸载指定软件，包括旧版本 brew config 查看目前 homebrew 运行设置 brew doctor 启动 homebrew 自检 国内安装镜像参考：
homebrew | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror Homebrew 源使用帮助 — USTC Mirror Help 文档 Homebrew (gitee.io)   ]]></content></entry><entry><title>vscode 使用中遇到的问题</title><url>/posts/vscode-problem.html</url><categories><category>软件问题</category></categories><tags><tag>vscode</tag></tags><content type="html"> 在终端中使用vsocde 的命令code xxxx来打开项目，出现如下错误：
/usr/local/bin/code: line 6: python: command not found /usr/local/bin/code: line 10: ./MacOS/Electron: No such file or directory 解决办法：
cd /usr/local/bin进入目录，找到code文件，将python -c改成python3 -c</content></entry><entry><title>关于 Hugo NexT 组织</title><url>/about.html</url><categories/><tags/><content type="html"> Hugo NexT 组织是由众多喜爱 NexT 主题及风格的世界各地友人共同组建而成，为的就是让这个主题继续在 Hugo 引擎中也能得到发扬光大，在此也欢迎你的加入！
我们的愿景 延续 NexT 经典的黑白调搭配，保持简单的易用性及强大的功能。
使用反馈 加入 GitHub Discussions 或 Gitter 在线讨论 🍻 GitHub Issues 提交错误报告 🐛 GitHub Feature 表新功能的想法 ✨ 同时国内用户也可加入 QQ 群交流： 604710815</content></entry><entry><title>站点示例</title><url>/flinks.html</url><categories/><tags/><content type="html"> 如想交换本站友情链接，请在评论区留下你的站点信息，格式参考如下：
- name: Hugo-NexT desc: Hugo NexT 官方预览网站。 avatar: https://hugo-next.eu.org/imgs/hugo_next_avatar.png link: https://hugo-next.eu.org</content></entry></search>